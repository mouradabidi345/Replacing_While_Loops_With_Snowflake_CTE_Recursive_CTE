--ABNORMAL RANK ADVANCEMENT PATTERNSset STARTDATE = '01/01/2022';set ENDDATE  = '01/31/2022';set NUM_WEEKS = 5;set NUM_RANKS_MIN =2;--MOST RECENTLY CLOSED WEEK FOR USE DOWNSTREAMset RECENT_CLOSE_WEEK  =    (    SELECT        MAX(CP.PeriodID)    FROM Tbl_CommPeriods CP
    WHERE  CP.ISCLOSED = 1    );--select $RECENT_CLOSE_WEEK set COMMPERIOD_START_PREP  =    (    SELECT        CP.PeriodID
    FROM Tbl_CommPeriods CP
    WHERE $STARTDATE BETWEEN CP.STARTDATE AND CP.ENDDATE
    AND CP.ISCLOSED = 1    );--select $COMMPERIOD_START_PREPSet COMMPERIOD_END_PREP =    (    SELECT        CP.PeriodID
    FROM Tbl_CommPeriods CP
    WHERE $ENDDATE BETWEEN CP.STARTDATE AND CP.EndDate
    AND CP.ISCLOSED = 1    ) ;--select $COMMPERIOD_END_PREPset COMMPERIOD_START=    (   -- SELECT       CASE WHEN $COMMPERIOD_START_PREP IS NULL THEN ($RECENT_CLOSE_WEEK - $NUM_WEEKS)           ELSE $COMMPERIOD_START_PREP
           END
    );--select $COMMPERIOD_STARTset COMMPERIOD_END=    (    --SELECT        CASE WHEN $COMMPERIOD_END_PREP IS NULL THEN $RECENT_CLOSE_WEEK
            ELSE $COMMPERIOD_END_PREP
            END
    );---------- Use a Recursive CTE instead of using this sql statement : ----INSERT INTO @WEEKS_OPTIONS (NUMBER_OF_WEEKS) values(0), (1), (2), (3), (4), (5), (6), (7), (8), (9), (10)--DELETE FROM @WEEKS_OPTIONS WHERE NUMBER_OF_WEEKS > @NUM_WEEKS WITH WEEKS_OPTIONS (NUMBER_OF_WEEKS) AS(   SELECT 0 AS NUMBER_OF_WEEKS
   UNION ALL   SELECT W.NUMBER_OF_WEEKS + 1  AS NUMBER_OF_WEEKS
   FROM WEEKS_OPTIONS W
   WHERE W.NUMBER_OF_WEEKS < $NUM_WEEKS
)--SELECT  *--FROM WEEKS_OPTIONS,RELEVANT_RANK_ADVANCEMENTS AS (SELECT        RA.*--INTO #RELEVANT_RANK_ADVANCEMENTSFROM Ranks_Azure RA
WHERE RA.PREVIOUSRANKID > 4    AND RA.CommPeriodID BETWEEN $COMMPERIOD_START AND $COMMPERIOD_END )--select *--from RELEVANT_RANK_ADVANCEMENTS--NARROW THE SCOPE TO ONLY THOSE WHO MAY MEET THE REQUIREMENTS OF REPORT (i.e., have at least a delta equal to the min# ranks selected by user, POSSIBLES AS (SELECT        DISTRIBUTORID
    , MAX(RRA.NEWRANKID) AS MAX_RANK
    , MIN(RRA.PREVIOUSRANKID) AS MIN_RANK
--INTO #POSSIBLESFROM RELEVANT_RANK_ADVANCEMENTS RRA
GROUP BY DISTRIBUTORID
HAVING (MAX(RRA.NEWRANKID) - MIN(RRA.PREVIOUSRANKID)) >= $NUM_RANKS_MIN ) --select * --from POSSIBLES, BASE_FOR_LOOP AS  (SELECT RRA.*--INTO BASE_FOR_LOOPFROM RELEVANT_RANK_ADVANCEMENTS RRA
    INNER JOIN POSSIBLES P
        ON RRA.DISTRIBUTORID = P.DISTRIBUTORID
ORDER BY RRA.DISTRIBUTORID
    , RRA.COMMPERIODID  )--select *--from BASE_FOR_LOOP,Max_Min AS (          select    DISTRIBUTORID
                 , MAX(COMMPERIODID)                 , MIN (COMMPERIODID)                 , MAX(COMMPERIODID) - MIN (COMMPERIODID) AS  WEEKS_DIFFERENCE    
  from BASE_FOR_LOOP
  group by DISTRIBUTORID
), Results As (select P1.DISTRIBUTORID
    , P1.COMMPERIODID
    , P0.CommPeriodID AS PREVIOUS_COMM_PERIOD
    , P0.CommPeriodID - 1 AS PREVIOUS_COMM_PERIOD_END --TO GET THE END DATE OF THE PREVIOUS WEEK!    , MAX(P1.NEWRANKID) AS NEW_RANK
    , MIN(P0.PREVIOUSRANKID) AS PREVIOUS_RANK
    , (MAX(P1.NEWRANKID) - MIN(P0.PREVIOUSRANKID)) AS NUM_OF_RANKS
    , W.NUMBER_OF_WEEKS + 1 AS WEEKS_TO_ADVANCE
from WEEKS_OPTIONS W left join Max_Min M on W.NUMBER_OF_WEEKS = M.WEEKS_DIFFERENCE
RIGHT JOIN BASE_FOR_LOOP P1 ON P1.DISTRIBUTORID = M.DISTRIBUTORID
INNER JOIN BASE_FOR_LOOP P0
        ON P1.DISTRIBUTORID = P0.DISTRIBUTORID
         AND P1.COMMPERIODID - W.NUMBER_OF_WEEKS = P0.COMMPERIODID
GROUP BY        P1.DISTRIBUTORID
    , P1.COMMPERIODID
    , P0.CommPeriodID
    ,W.NUMBER_OF_WEEKS
HAVING (MAX(P1.NEWRANKID) - MIN(P0.PREVIOUSRANKID)) >= $NUM_RANKS_MIN
--Order by WEEKS_TO_ADVANCE         )--------------------------------------------------------------------------------select *--from RESULTSSELECT   DIST.LEGACYNUMBER AS DISTRIBUTORID
       , CASE WHEN (DIST."CUSTOM1" IS NOT NULL AND DIST."CUSTOM1" <> '') THEN DIST."CUSTOM1"
        ELSE CONCAT (IFNULL(DIST.FIRSTNAME, ''), ' ', IFNULL(DIST.LASTNAME, ''))        END AS NAME
     , R.COMMPERIODID AS PERIOD_WEEK_ID
    , CP1.ENDDATE AS PERIOD_END_DATE
    , R.PREVIOUS_COMM_PERIOD_END AS PREVIOUS_PERIOD_WEEK_ID
    , CP0.ENDDATE AS PREVIOUS_PERIOD_END_DATE
    , R.NEW_RANK
    , RL.RANKNAME AS NEW_RANK_NAME
    , R.PREVIOUS_RANK
    , RLPREV.RANKNAME AS PREVIOUS_RANK_NAME
    , R.NUM_OF_RANKS
    , R.WEEKS_TO_ADVANCE
FROM RESULTS R
    INNER JOIN "DB_ASEA_REPORTS"."DBO"."TBL_COMMPERIODS" CP1
        ON R.COMMPERIODID = CP1.PERIODID
    INNER JOIN "DB_ASEA_REPORTS"."DBO"."TBL_COMMPERIODS" CP0
        ON R.PREVIOUS_COMM_PERIOD_END = CP0.PERIODID
    INNER JOIN "DB_ASEA_REPORTS"."DBO"."TBL_RANKS" RL 
        ON R.NEW_RANK = RL.RANKID
    INNER JOIN "DB_ASEA_REPORTS"."DBO"."TBL_RANKS" RLPREV
        ON R.PREVIOUS_RANK = RLPREV.RANKID
    join DB_ASEA_REPORTS.DBO.TBL_DISTRIBUTOR DIST on DIST.LEGACYNUMBER = R.DISTRIBUTORID
order by DIST.LEGACYNUMBER